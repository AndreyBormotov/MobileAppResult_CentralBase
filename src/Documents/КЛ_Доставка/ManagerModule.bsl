
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Анкета покупателя
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента";
	КомандаПечати.Представление = НСтр("ru = 'Анкета клиента'");
	КомандаПечати.Порядок = 10;
	
	// Товарная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТоварнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная'");
	КомандаПечати.Порядок = 1;
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнкетаКлиента,ТоварнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.Порядок = 15;
	
	// Договор на доставку
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "УправлениеПечатью";
	КомандаПечати.Идентификатор = "Документ.КЛ_Доставка.ПФ_DOC_ДоговорНаДоставку";
	КомандаПечати.Представление = НСтр("ru = 'Договор на доставку'");
	КомандаПечати.Порядок = 20;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АнкетаКлиента");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкетыКлиента(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета клиента'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.КЛ_Доставка.ПФ_MXL_АнкетаКлиента";
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ТоварнаяНакладная");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьТоварнойНакладной(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Товарная накладная'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.КЛ_Доставка.ПФ_MXL_ТоварнаяНакладная";
	КонецЕсли;

	КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАнкетыКлиента(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АнкетаКлиента";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КЛ_Доставка.ПФ_MXL_АнкетаКлиента");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиАнкету(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТоварнойНакладной(МассивОбъектов, ОбъектыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ТоварнаяНакладная";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КЛ_Доставка.ПФ_MXL_ТоварнаяНакладная");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиШапкуНакладной(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиТаблицуНакладной(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодписиНакладной(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КЛ_Доставка.Ссылка КАК Ссылка,
	               |	КЛ_Доставка.ВерсияДанных КАК ВерсияДанных,
	               |	КЛ_Доставка.ПометкаУдаления КАК ПометкаУдаления,
	               |	КЛ_Доставка.Номер КАК Номер,
	               |	КЛ_Доставка.Дата КАК Дата,
	               |	КЛ_Доставка.Проведен КАК Проведен,
	               |	КЛ_Доставка.Организация КАК Организация,
	               |	КЛ_Доставка.Контрагент КАК Контрагент,
	               |	КЛ_Доставка.Договор КАК Договор,
	               |	КЛ_Доставка.Основание КАК Основание,
	               |	КЛ_Доставка.АдресДоставки КАК АдресДоставки,
	               |	КЛ_Доставка.Ответственный КАК Ответственный,
	               |	КЛ_Доставка.Комментарий КАК Комментарий,
	               |	КЛ_Доставка.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество
	               |	) КАК Товары
	               |ИЗ
	               |	Документ.КЛ_Доставка КАК КЛ_Доставка
	               |ГДЕ
	               |	КЛ_Доставка.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции 

Процедура ВывестиАнкету(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьАнкеты = Макет.ПолучитьОбласть("ОбластьАнкеты");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Номер", ДанныеДокументов.Номер);
	ДанныеПечати.Вставить("Дата", ДанныеДокументов.Дата);
	
	СсылкаНаДокумент = ДанныеДокументов.Ссылка;
	
	ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(СсылкаНаДокумент, 1, 120);
	
	Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
		|Технические подробности см. в журнале регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Иначе
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОбластьШапка.Рисунки.МестоДляQRКода.Картинка = КартинкаQRКода;
	КонецЕсли;
	
	ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьАнкеты);
	
КонецПроцедуры

Процедура ВывестиШапкуНакладной(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("номер", ДанныеДокументов.Номер);
	ДанныеПечати.Вставить("дата", ДанныеДокументов.Дата);
	ДанныеПечати.Вставить("отправитель", ДанныеДокументов.Организация);
	ДанныеПечати.Вставить("получатель", ДанныеДокументов.Контрагент);
	
	СсылкаНаДокумент = ДанныеДокументов.Ссылка;
	
	ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(СсылкаНаДокумент, 1, 120);
	
	Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
		|Технические подробности см. в журнале регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	Иначе
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОбластьШапка.Рисунки.МестоДляQRКода.Картинка = КартинкаQRКода;
	КонецЕсли;
	
	ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьШапка);
КонецПроцедуры

Процедура ВывестиТаблицуНакладной(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ТабличныйДокумент.Вывести(ШапкаТаблицы);
	
	ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("нн", ВыборкаТовары.НомерСтроки);
		ДанныеПечати.Вставить("номенклатура", ВыборкаТовары.Номенклатура);
		ДанныеПечати.Вставить("количество", ВыборкаТовары.Количество);
		
		СтрокаТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла

КонецПроцедуры

Процедура ВывестиПодписиНакладной(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	Должность = ДанныеДокументов.Ответственный;
	//Фио = ДанныеДокументов.Ответственный;
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("должность", Должность);
	//ДанныеПечати.Вставить("фио", Фио);
	
	СсылкаНаДокумент = ДанныеДокументов.Ссылка;
	
	ОбластьПодпись.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПодпись);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли