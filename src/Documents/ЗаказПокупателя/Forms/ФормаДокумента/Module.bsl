
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	//+++Бормотов
	Если НЕ ПроверитьКорректностьСкидки() Тогда
		ТекущиеДанные.Скидка = "";
		СообщениеПользователю()
	КонецЕсли;
	//---Бормотов
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	//+++Бормотов
	Если НЕ ПроверитьКорректностьСкидки() Тогда
		ТекущиеДанные.Скидка = "";
		СообщениеПользователю()
	КонецЕсли;
	//---Бормотов
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//Начало Бормотов
	ОбщаяСкидка = Объект.КЛ_СогласованнаяСкидка + ТекущиеДанные.Скидка;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена * (1 - ((Объект.КЛ_СогласованнаяСкидка + ТекущиеДанные.Скидка) / 100));
	РассчитатьСуммуДокумента();
	//Конец Бормотов
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьКорректностьСкидки()
	
	ОбщаяСкидка = Объект.КЛ_СогласованнаяСкидка;
	
	Для Каждого Строка Из Объект.Товары Цикл
		Если Строка.Скидка + ОбщаяСкидка > 100 Тогда
			Возврат Ложь
		КонецЕсли
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		Если Строка.Скидка + ОбщаяСкидка > 100 Тогда
			Возврат Ложь
		КонецЕсли
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СообщениеПользователю()
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Совокупная скидка не может быть больше 100%";
		Сообщение.Сообщить();
	КонецПроцедуры

&НаКлиенте
Процедура СпроситьОПересчетеТаблиц()
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросЗавершение", ЭтаФорма);
	ТекстВопроса = "Размер скидки изменен. Пересчитать данные таблицы?";
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Нет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура СогласованнаяСкидкаПриИзменении(Элемент)
	
	//++Бормотов
	СкидкаКорректна = ПроверитьКорректностьСкидки();
	
	Если СкидкаКорректна Тогда
		Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда
			СпроситьОПересчетеТаблиц();
		КонецЕсли;
	Иначе
		Объект.КЛ_СогласованнаяСкидка = "";
		СообщениеПользователю()
	КонецЕсли;
	//--Бормотов
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросЗавершение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПересчитатьТаблицы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСумму(Команда)
	ПересчитатьТаблицы();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицы()
	
	Товары = Объект.Товары;
	Услуги = Объект.Услуги;
	
	Для Каждого Строка Из Товары Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	
	Для Каждого Строка Из Услуги Цикл
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
