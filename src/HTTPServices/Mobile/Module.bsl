#Область ОбработчикиСобытий
Функция ПроверитьДоступность(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Ок");
	Возврат Ответ;
КонецФункции

Функция ПолучитьДанные(Запрос)
	
	Попытка
	
		ИдентификаторУстройства = Запрос.Заголовки.Получить("X-MobileID");
		
		Узел = ПланыОбмена.ОбменСМобильным.НайтиПоКоду(ИдентификаторУстройства);
		
		Если НЕ ЗначениеЗаполнено(Узел) Тогда
			УзелОбъект = ПланыОбмена.ОбменСМобильным.СоздатьУзел();
			
			Пользователь = Пользователи.ТекущийПользователь();
			
			УзелОбъект.Наименование = СтрШаблон("Мобильное устройство (%1)", Пользователь);
			УзелОбъект.Код = ИдентификаторУстройства;
			УзелОбъект.Пользователь = Пользователь;
			УзелОбъект.Записать();
			Узел = УзелОбъект.Ссылка;
			НачальнаяРегистрация(Узел);
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДоставкаИзменения.Ссылка КАК Ссылка,
		               |	ДоставкаИзменения.Ссылка.Номер КАК Номер,
		               |	ДоставкаИзменения.Ссылка.Дата КАК Дата,
		               |	ДоставкаИзменения.Ссылка.Контрагент КАК Контрагент,
		               |	ДоставкаИзменения.Ссылка.АдресДоставки КАК АдресДоставки,
		               |	ДоставкаИзменения.Ссылка.Комментарий КАК Комментарий,
		               |	ДоставкаИзменения.Ссылка.Товары.(
		               |		Номенклатура КАК Номенклатура,
		               |		Количество КАК Количество
		               |	) КАК Товары
		               |ИЗ
		               |	Документ.КЛ_Доставка.Изменения КАК ДоставкаИзменения
		               |ГДЕ
		               |	ДоставкаИзменения.Узел = &Узел
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КонтрагентыИзменения.Ссылка КАК Ссылка,
		               |	КонтрагентыИзменения.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
		               |	КонтрагентыИзменения.Ссылка.Код КАК Код,
		               |	КонтрагентыИзменения.Ссылка.Наименование КАК Наименование
		               |ИЗ
		               |	Справочник.Контрагенты.Изменения КАК КонтрагентыИзменения
		               |ГДЕ
		               |	КонтрагентыИзменения.Узел = &Узел
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НоменклатураИзменения.Ссылка КАК ССсылка,
		               |	НоменклатураИзменения.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
		               |	НоменклатураИзменения.Ссылка.Код КАК Код,
		               |	НоменклатураИзменения.Ссылка.Наименование КАК Наименование
		               |ИЗ
		               |	Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
		               |ГДЕ
		               |	НоменклатураИзменения.Узел = &Узел";

		Запрос.УстановитьПараметр("Узел", Узел);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ВыборкаДокумент = РезультатЗапроса[0].Выбрать();
		ВыборкаКонтрагент = РезультатЗапроса[1].Выбрать();
		ВыборкаНоменклатура = РезультатЗапроса[2].Выбрать();

		ДанныеДляОтправки = Новый Массив;
		ОтправленныеОбъекты = Новый Массив;
		
		//Добавляем документы для отправки
		Пока ВыборкаДокумент.Следующий() Цикл
			
			ДанныеДокумента = Новый Структура;
			ДанныеДокумента.Вставить("ВидОбъекта", "Документ");
			ДанныеДокумента.Вставить("Идентификатор", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
			ДанныеДокумента.Вставить("Номер", Выборка.Номер);
			ДанныеДокумента.Вставить("Дата", ЗаписатьДатуJSON(Выборка.Дата, ФорматДатыJSON.ISO));
			ДанныеДокумента.Вставить("Комментарий", Выборка.Комментарий);
			
			ДанныеДляОтправки.Добавить(ДанныеДокумента);
			
			ОтправленныеОбъекты.Добавить(ВыборкаДокумент.Ссылка);
			
		КонецЦикла;
		//Добавляем контрагентов для отправки
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ДанныеКонтрагента = Новый Структура;
			ДанныеКонтрагента.Вставить("ВидОбъекта", "Контрагент");
			ДанныеКонтрагента.Вставить("Идентификатор", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
			ДанныеКонтрагента.Вставить("Номер", Выборка.Номер);
			ДанныеКонтрагента.Вставить("Дата", ЗаписатьДатуJSON(Выборка.Дата, ФорматДатыJSON.ISO));
			ДанныеКонтрагента.Вставить("Комментарий", Выборка.Комментарий);
			
			ДанныеДляОтправки.Добавить(ДанныеКонтрагента);
			
			ОтправленныеОбъекты.Добавить(ВыборкаКонтрагент.Ссылка);
			
		КонецЦикла;
		//Добавляем номенклатуру для отправки
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ВыборкаНоменклатура = Новый Структура;
			ВыборкаНоменклатура.Вставить("ВидОбъекта", "Номенклатура");
			ВыборкаНоменклатура.Вставить("Идентификатор", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
			ВыборкаНоменклатура.Вставить("Номер", Выборка.Номер);
			ВыборкаНоменклатура.Вставить("Дата", ЗаписатьДатуJSON(Выборка.Дата, ФорматДатыJSON.ISO));
			ВыборкаНоменклатура.Вставить("Комментарий", Выборка.Комментарий);
			
			ДанныеДляОтправки.Добавить(ВыборкаНоменклатура);
			
			ОтправленныеОбъекты.Добавить(ВыборкаНоменклатура.Ссылка);
			
		КонецЦикла;
		
		ТелоОтвета = ЗаписатьЗначениеJSON(ДанныеДляОтправки);
		
		Если ЗначениеЗаполнено(ОтправленныеОбъекты) Тогда
			ПланыОбмена.УдалитьРегистрациюИзменений(Узел, ОтправленныеОбъекты);
		КонецЕсли;
		
	Исключение
		
		ЗаписьЖурналаРегистрации("ОбменСМобильным.Ошибка", УровеньЖурналаРегистрации.Ошибка,,,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
		
	КонецПопытки;
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json");
	Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
	Возврат Ответ;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура НачальнаяРегистрация(Узел)
//Получаем данные по всем документам пользователя
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Доставка.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ДокументыПользователя
		|ИЗ
		|	Документ.КЛ_Доставка КАК Доставка
		|ГДЕ
		|	Доставка.Ответственный = &Ответственный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДокументыПользователя.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_ДокументыПользователя КАК ВТ_ДокументыПользователя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КЛ_ДоставкаТовары.Номенклатура КАК Номенклатура
		|ИЗ
		|	Документ.КЛ_Доставка.Товары КАК КЛ_ДоставкаТовары
		|ГДЕ
		|	КЛ_ДоставкаТовары.Ссылка.Ответственный = &Ответственный
		|
		|СГРУППИРОВАТЬ ПО
		|	КЛ_ДоставкаТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КЛ_Доставка.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.КЛ_Доставка КАК КЛ_Доставка
		|ГДЕ
		|	КЛ_Доставка.Ответственный = &Ответственный
		|
		|СГРУППИРОВАТЬ ПО
		|	КЛ_Доставка.Контрагент";
	
	Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокумент = РезультатЗапроса[1].Выбрать();
	ВыборкаНоменклатура = РезультатЗапроса[2].Выбрать();
	ВыборкаКонтрагент = РезультатЗапроса[3].Выбрать();
	
//Добавляем результат выборки в массив
	ДанныеДляРегистрации = Новый Массив;
	
	Пока ВыборкаДокумент.Следующий() Цикл
		ДанныеДляРегистрации.Добавить(ВыборкаДокумент.Ссылка);
	КонецЦикла;
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ДанныеДляРегистрации.Добавить(ВыборкаНоменклатура.Номенклатура);
	КонецЦикла;
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		ДанныеДляРегистрации.Добавить(ВыборкаКонтрагент.Контрагент);
	КонецЦикла;
	
//Если массив не пустой регистрируем все к обмену
	Если ЗначениеЗаполнено(ДанныеДляРегистрации) Тогда
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, ДанныеДляРегистрации);
	КонецЕсли;
	
КонецПроцедуры

Функция ОтправитьДанные(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции
#КонецОбласти