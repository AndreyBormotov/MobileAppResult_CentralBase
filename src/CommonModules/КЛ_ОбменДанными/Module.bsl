&НаСервере
Функция ОбработатьВходящийGETЗапрос(Запрос) Экспорт
	
	ИдентификаторУстройства = Запрос.Заголовки.Получить("X-MobileID");
	
	ТелоОтвета = ПодготовитьТелоОтвета(ИдентификаторУстройства);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json");
	Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
	Возврат Ответ;
	
КонецФункции

&НаСервере
Функция ПодготовитьТелоОтвета(ИдентификаторУстройства)Экспорт
	
	Узел = ПланыОбмена.ОбменСМобильным.НайтиПоКоду(ИдентификаторУстройства);
	Если НЕ ЗначениеЗаполнено(Узел) Тогда
		УзелОбъект = ПланыОбмена.ОбменСМобильным.СоздатьУзел();
		
		Пользователь = Пользователи.ТекущийПользователь();
		
		УзелОбъект.Наименование = СтрШаблон("Мобильное устройство (%1)", Пользователь);
		УзелОбъект.Код = ИдентификаторУстройства;
		УзелОбъект.Пользователь = Пользователь;
		УзелОбъект.Записать();
		Узел = УзелОбъект.Ссылка;
		НачальнаяРегистрация(Узел);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоставкаИзменения.Ссылка КАК Ссылка,
	|	ДоставкаИзменения.Ссылка.Номер КАК Номер,
	|	ДоставкаИзменения.Ссылка.Дата КАК Дата,
	|	ДоставкаИзменения.Ссылка.Контрагент КАК Контрагент,
	|	ДоставкаИзменения.Ссылка.АдресДоставки КАК АдресДоставки,
	|	ДоставкаИзменения.Ссылка.КонтактныйТелефон КАК КонтактныйТелефон,
	|	ДоставкаИзменения.Ссылка.Комментарий КАК Комментарий,
	|	ДоставкаИзменения.Ссылка.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество
	|	) КАК Товары
	|ИЗ
	|	Документ.КЛ_Доставка.Изменения КАК ДоставкаИзменения
	|ГДЕ
	|	ДоставкаИзменения.Узел = &Узел
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыИзменения.Ссылка КАК Ссылка,
	|	КонтрагентыИзменения.Ссылка.Код КАК Код,
	|	КонтрагентыИзменения.Ссылка.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Контрагенты.Изменения КАК КонтрагентыИзменения
	|ГДЕ
	|	КонтрагентыИзменения.Узел = &Узел
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураИзменения.Ссылка КАК Ссылка,
	|	НоменклатураИзменения.Ссылка.Код КАК Код,
	|	НоменклатураИзменения.Ссылка.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	|ГДЕ
	|	НоменклатураИзменения.Узел = &Узел";
	
	Запрос.УстановитьПараметр("Узел", Узел);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляОтправки = Новый Массив;
	ОтправленныеОбъекты = Новый Массив;
	
//Добавляем контрагентов для отправки
	Если НЕ РезультатЗапроса[1].Пустой() Тогда
		ВыборкаКонтрагент = РезультатЗапроса[1].Выбрать();
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ДанныеКонтрагента = Новый Структура;
			ДанныеКонтрагента.Вставить("ВидОбъекта", "Контрагент");
			ДанныеКонтрагента.Вставить("Идентификатор", Строка(ВыборкаКонтрагент.Ссылка.УникальныйИдентификатор()));
			ДанныеКонтрагента.Вставить("Код", ВыборкаКонтрагент.Код);
			ДанныеКонтрагента.Вставить("Наименование", ВыборкаКонтрагент.Наименование);
			
			
			ДанныеДляОтправки.Добавить(ДанныеКонтрагента);
			
			ОтправленныеОбъекты.Добавить(ВыборкаКонтрагент.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
//Добавляем номенклатуру для отправки
	Если НЕ РезультатЗапроса[2].Пустой() Тогда
		ВыборкаНоменклатура = РезультатЗапроса[2].Выбрать();
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ДанныеНоменклатура = Новый Структура;
			ДанныеНоменклатура.Вставить("ВидОбъекта", "Номенклатура");
			ДанныеНоменклатура.Вставить("Идентификатор", Строка(ВыборкаНоменклатура.Ссылка.УникальныйИдентификатор()));
			ДанныеНоменклатура.Вставить("Код", ВыборкаНоменклатура.Код);
			ДанныеНоменклатура.Вставить("Наименование", ВыборкаНоменклатура.Наименование);
			
			ДанныеДляОтправки.Добавить(ДанныеНоменклатура);
			
			ОтправленныеОбъекты.Добавить(ВыборкаНоменклатура.Ссылка);
			
		КонецЦикла;
	КонецЕсли;
	
//Добавляем документы для отправки	
Если НЕ РезультатЗапроса[0].Пустой() Тогда
		ВыборкаДокумент = РезультатЗапроса[0].Выбрать();
		
		Пока ВыборкаДокумент.Следующий() Цикл
			
			ДанныеДокумента = Новый Структура;
			ДанныеДокумента.Вставить("ВидОбъекта", "Документ");
			ДанныеДокумента.Вставить("Идентификатор", Строка(ВыборкаДокумент.Ссылка.УникальныйИдентификатор()));
			ДанныеДокумента.Вставить("Номер", ВыборкаДокумент.Номер);
			ДанныеДокумента.Вставить("Дата", ЗаписатьДатуJSON(ВыборкаДокумент.Дата, ФорматДатыJSON.ISO));
			ДанныеДокумента.Вставить("Контрагент", Строка (ВыборкаДокумент.Контрагент.Ссылка.УникальныйИдентификатор()));
			ДанныеДокумента.Вставить("КонтактныйТелефон", ВыборкаДокумент.КонтактныйТелефон);
			ДанныеДокумента.Вставить("АдресДоставки", ВыборкаДокумент.АдресДоставки);
			ДанныеДокумента.Вставить("Комментарий", ВыборкаДокумент.Комментарий);
			
			ДанныеТаблицыТовары = Новый Массив;
			
			ВыборкаТовары = ВыборкаДокумент.Товары.Выбрать();
			
			Пока ВыборкаТовары.Следующий() Цикл
				
				ДанныеСтрокиТовары = Новый Структура;
				ДанныеСтрокиТовары.Вставить("Номенклатура", Строка(ВыборкаТовары.Номенклатура.Ссылка.УникальныйИдентификатор()));
				ДанныеСтрокиТовары.Вставить("Количество", ВыборкаТовары.Количество);
				ДанныеТаблицыТовары.Добавить(ДанныеСтрокиТовары);
			КонецЦикла;
			
			ДанныеДокумента.Вставить("Товары", ДанныеТаблицыТовары);
			
			ДанныеДляОтправки.Добавить(ДанныеДокумента);
			
			ОтправленныеОбъекты.Добавить(ВыборкаДокумент.Ссылка);
		КонецЦикла;
	КонецЕсли;
		
	ТелоОтвета = ЗаписатьЗначениеJSON(ДанныеДляОтправки);
	
	Если ЗначениеЗаполнено(ОтправленныеОбъекты) Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(Узел, ОтправленныеОбъекты);
	КонецЕсли;
	
	Возврат ТелоОтвета
	
КонецФункции

&НаСервере
Процедура НачальнаяРегистрация(Узел)
	//Получаем данные по всем документам пользователя
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доставка.Ссылка КАК Доставка
	|ИЗ
	|	Документ.КЛ_Доставка КАК Доставка
	|ГДЕ
	|	Доставка.Ответственный = &Ответственный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты";
	
	Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
	Запрос.УстановитьПараметр("ВидНоменклатуры", Перечисления.ВидыНоменклатуры.Товар);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	//Добавляем результат выборки в массив	
	ДанныеДляРегистрации = Новый Массив;
	
	Если НЕ РезультатЗапроса[0].Пустой() Тогда
		ВыборкаДокумент = РезультатЗапроса[0].Выбрать();
		
		Пока ВыборкаДокумент.Следующий() Цикл
			
			ДанныеДляРегистрации.Добавить(ВыборкаДокумент.Доставка);
			
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ РезультатЗапроса[1].Пустой() Тогда
		ВыборкаНоменклатура = РезультатЗапроса[1].Выбрать();
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ДанныеДляРегистрации.Добавить(ВыборкаНоменклатура.Номенклатура);
			
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ РезультатЗапроса[2].Пустой() Тогда
		ВыборкаКонтрагент = РезультатЗапроса[2].Выбрать();
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ДанныеДляРегистрации.Добавить(ВыборкаКонтрагент.Контрагент);
			
		КонецЦикла;
	КонецЕсли;
	
	//Если массив не пустой регистрируем все к обмену
	Если ЗначениеЗаполнено(ДанныеДляРегистрации) Тогда
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, ДанныеДляРегистрации);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьВходящийPOSTЗапрос(Запрос) Экспорт
	
	ИдентификаторУстройства = Запрос.Заголовки.Получить("X-MobileID");
	
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	ДанныеЗапроса = ПрочитатьЗначениеJSON(ТелоЗапроса);
	
		Для Каждого ЭлементМассива Из ДанныеЗапроса Цикл
			
			Ссылка = Документы.КЛ_Доставка.ПолучитьСсылку(
				Новый УникальныйИдентификатор(ЭлементМассива.Идентификатор));
	
			ДоставкаОбъект = Ссылка.ПолучитьОбъект();
	
			Если ДоставкаОбъект = Неопределено Тогда
				ДоставкаОбъект = Документы.КЛ_Доставка.СоздатьЭлемент();
				ДоставкаОбъект.УстановитьСсылкуНового(Ссылка);
			КонецЕсли;
			
			//Преобразуем и сохраняем фото
			Если ЗначениеЗаполнено(ЭлементМассива.Фотография) Тогда
				ДвоичныеДанныеФото = Base64Значение(ЭлементМассива.Фотография);
				ДоставкаОбъект.Фотография = Новый ХранилищеЗначения(ДвоичныеДанныеФото);
			КонецЕсли;
			//Заполняем статус
			Если ЗначениеЗаполнено(ЭлементМассива.Статус) Тогда
				ДоставкаОбъект.Статус = Перечисления.КЛ_СтатусыДоставок[ЭлементМассива.Статус]
			Иначе
				ДоставкаОбъект.Статус = Перечисления.КЛ_СтатусыДоставок.ПустаяСсылка();
			КонецЕсли;
	
			ДоставкаОбъект.Комментарий = ЭлементМассива.Комментарий;
			ДоставкаОбъект.Записать();
		КонецЦикла;

	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Данные обновлены");
	Возврат Ответ;
	
КонецФункции